name: Simple Deploy - AI Journaling App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Build and test
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install backend dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: |
          cd client
          npm ci

      - name: Test backend
        run: npm run test:ci
        env:
          NODE_ENV: test

      - name: Test frontend
        run: |
          cd client
          npm test -- --watchAll=false --passWithNoTests
        env:
          CI: true

      - name: Build frontend
        run: |
          cd client
          npm run build
        env:
          CI: false
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: client/build/

  # Deploy to Vercel (Frontend)
  deploy-frontend:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ secrets.VERCEL_TOKEN != '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: client/build/

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client
          vercel-args: '--prod'

  # Deploy to Railway (Backend)
  deploy-backend:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ secrets.RAILWAY_TOKEN != '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: |
          echo "Deploying to Railway..."
          if [ -n "${{ secrets.RAILWAY_SERVICE }}" ]; then
            echo "Using service: ${{ secrets.RAILWAY_SERVICE }}"
            railway up --service ${{ secrets.RAILWAY_SERVICE }}
          else
            echo "No service specified, using default"
            railway up
          fi
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} 